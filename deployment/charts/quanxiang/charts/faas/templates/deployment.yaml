kind: Deployment
apiVersion: apps/v1
metadata:
  name: faas
  namespace: {{ .Release.Namespace }}
  labels:
    app: faas
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: {{ .Values.app.kubernetes.io.name }}
    app.kubernetes.io/version: v1
    version: v1
  annotations:
    deployment.kubernetes.io/revision: '14'
    dev.nocalhost/application-name: faas
    dev.nocalhost/application-namespace: ""
    dev.nocalhost/dev-mode-count: '0'
    meta.helm.sh/release-name: faas
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    nocalhost-dep-ignore: 'true'
    servicemesh.kubesphere.io/enabled: 'false'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: faas
      app.kubernetes.io/name: {{ .Values.app.kubernetes.io.name }}
      app.kubernetes.io/version: v1
      version: v1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: faas
        app.kubernetes.io/name: {{ .Values.app.kubernetes.io.name }}
        app.kubernetes.io/version: v1
        version: v1
      annotations:
        dapr.io/app-id: faas-dapr
        dapr.io/app-port: '8081'
        dapr.io/enabled: 'true'
        kubesphere.io/containerSecrets: '{"container":"docker-registry"}'
        kubesphere.io/restartedAt: '2022-06-09T06:40:16.101Z'
        logging.kubesphere.io/logsidecar-config: '{}'
        sidecar.istio.io/inject: 'false'
    spec:
      volumes:
        - name: volume
          configMap:
            name: faas
            defaultMode: 420
      containers:
        - name: container
          image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
          args:
            - '--config=/configs/config.yml'
          ports:
            - name: faas
              containerPort: 8081
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: volume
              readOnly: true
              mountPath: /configs/
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: qxp-faas
      serviceAccount: qxp-faas
      securityContext: {}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      affinity: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
