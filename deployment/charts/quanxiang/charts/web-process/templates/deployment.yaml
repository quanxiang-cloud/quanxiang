kind: Deployment
apiVersion: apps/v1
metadata:
  name: web-processors
  namespace: {{ .Release.Namespace }}
  labels:
    app: web-processors
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: {{ .Values.app.kubernetes.io.name }}
    app.kubernetes.io/version: v1
    version: v1
  annotations:
    deployment.kubernetes.io/revision: '69'
    servicemesh.kubesphere.io/enabled: 'false'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-processors
      app.kubernetes.io/name: {{ .Values.app.kubernetes.io.name }}
      app.kubernetes.io/version: v1
      version: v1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: web-processors
        app.kubernetes.io/name: {{ .Values.app.kubernetes.io.name }}
        app.kubernetes.io/version: v1
        version: v1
      annotations:
        kubesphere.io/containerSecrets: '{"container-kudq8k":"docker"}'
        kubesphere.io/restartedAt: '2022-05-13T05:43:35.020Z'
        logging.kubesphere.io/logsidecar-config: '{}'
        sidecar.istio.io/inject: 'false'
    spec:
      containers:
        - name: container-kudq8k
          image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
          command:
            - ./web-processors
          ports:
            - name: tcp-80
              containerPort: 80
              protocol: TCP
          env:
            - name: FILESERVER_ENDPOINT
              value: 'http://fileserver'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      affinity: {}
      schedulerName: default-scheduler
      {{- if .Values.hostAliases.enabled }}
      hostAliases:
        - hostnames:
            - qxp-static.fs.{{ .Values.global.domain }}
          ip: {{ .Values.hostAliases.ip }}
      {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
