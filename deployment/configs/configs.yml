#Middleware Services 中间件服务
mysql:
  enabled: true
  rootPassword: qxp1234     #It is required to set the root user password if enabled equal to true    设置root用户密码 enabled为true时必填
redis:
  enabled: true
  password: qxp1234    #It is required to set the user password if enabled equal to true 设置用户密码 enabled为true时必填
kafka:
  enabled: true
dapr:
  enabled: false
elastic:
  enabled: true
mongo:
  enabled: true
  rootPassword: qxp1234  #Set Mongo password. Required when enabled is true 设置mongo密码，enabled为true时必填
minio:
  enabled: true
  accessKey: Minio   #Set minio accessKey. Required when enabled is true   设置minio accessKey，enabled为true时必填
  secretKey: Minio123456 #Set Mongo secretKey. Required when enabled is true  设置minio secretKey，enabled为true时必填
#Service profile 服务的配置文件
image:
  repo: docker.io/quanxiang
  tag: v1.1.2
imagePullSecrets: ""
domain: example.com       #设置访问平台的域名
persis:
  enabled: false
  storageClassName: "csi-ssd-enterprise"
args:
  enabled: true   #如果使用的是未被公网解析的域名，需要设置enabled为true
  endpoint: "example.com:31198"    #fileserver 域名    域名要与domain设置的域名一致
  ip: "xx.xx.xx.xx"   #k8s master节点的ip
faas:
  git:
    host: ""                # git server的访问地址，例如：http://git.quanxiang.dev 或者 http://192.168.0.3
    known_hosts_scan: ""    # 使用 ssh-keyscan -p 22端口 gitlab域名或者ip |base64 -w 0 生成
    sshPrivatekey: ""       # 使用  ssh-keygen -t rsa -f git_rsa -C "admin@quanxiang.dev" 生成ssh key, 将私钥使用base64编码, cat git_rsa|base64 -w 0
    gitSSHAddress: ""       # git server 的域名或者IP，例如：git.quanxiang.dev 或者 192.168.0.3
    gitSSHPort: 22          # git server 对外暴露的ssh端口，例如：22
    token: ""               # 将公钥写入gitlab并生成token放到这里
  docker:
    host: ""  #docker registry配置地址
    nameSpace: "" #镜像地址的中间部分，比如：[qxcr.xyz]/[quanxiang]/[faas:v1.1.2]中的quanxiang
    user: ""  #有push/pull这个registry空间的用户
    pass: "" #用户的密码

config:
  mysql:
    host: mysql.{{.}}.svc.cluster.local:3306     #如果上面中间件配置中mysql.enabled为true此处为mysql，否则请根据您的设置填写mysql host地址和端口
    user: root     #如果上面中间件配置中mysql.enabled为true此处为root，否则请根据您的设置填写mysql用户名
    password: qxp1234   #如果上面中间件配置中mysql.enabled为true此处为上述中间件配置中的rootPassword，否则请根据您的设置填写mysql密码
    log: true
  redis:
    addrs:
      - redis-cluster-0.redis-cluster-headless.{{.}}.svc.cluster.local:6379     #如果上面中间件配置中redis.enabled为true此处不需要更改，否则请根据您的设置填写redis ip地址和端口
      - redis-cluster-1.redis-cluster-headless.{{.}}.svc.cluster.local:6379
      - redis-cluster-2.redis-cluster-headless.{{.}}.svc.cluster.local:6379
    username:
    password: qxp1234    #如果上面中间件配置中redis.enabled为true此处为上述中间件配置中的redis.password，否则请根据您的设置填写您的redis密码
  elastic:
    host:
      - http://elasticsearch-master.{{.}}.svc.cluster.local:9200  #如果上面中间件配置中elastic.enabled为true此处配置不需要改动，否则请根据您的设置填写您的elasticsearch服务的ip和端口
    log: true
  kafka:
    broker:
      - kafka.{{.}}.svc.cluster.local:9092  #如果上面中间件配置中kafka.enabled为true此处不需要改动，否则请根据您的设置填写您kafka集群的ip和端口
  mongo:
    hosts:
      - mongodb.{{.}}.svc.cluster.local:27017   #如果上面中间件配置中mongo.enabled为true此处不需要改动，否则请根据您的设置填写您mongo集群的ip和端口
    direct: false
    credential:
      authMechanism: SCRAM-SHA-1
      authSource: admin
      username: root  #如果上面中间件配置中mongo.enabled为true此处不需要改动,否则请根据您的设置设置您的用户名
      password: qxp1234 #如果上面中间件配置中mongo.enabled为true此处为mongo.rootPassword,否则请根据您的设置设置您的密码
      passwordSet: false
  email:
    enabled: true
    host: xx.xx.xx
    port: xx
    username: xx
    password: xx
    alias: xx
    sender: xx@.com
#  email:
#    emails:
#      - { emailfrom: "XXX@XXX.com",username: "XXX",aliasname: "别名",password: "XXX",host: "邮件服务器地址",port: 111 }  #设置email信息以接收验证码
  storage:
    option: minio
    urlExpire: 600
    partExpire: 604800
    launch: false  # launch all configurations use the S3 protocol,default false
    storages:
      - { name: minio,protocol: http,domain: home.qxp.com,accessKey: Minio, secretKey: Minio123456,location: us-east-1,bucketName: default } #如果minio.enabled为true 此处不需要改动，否则请根据您的minio的信息填写

