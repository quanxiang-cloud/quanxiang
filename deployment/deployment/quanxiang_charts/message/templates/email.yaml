{{- if .Values.config.email.enabled }}
kind: Service
apiVersion: v1
metadata:
  name: email
  namespace: {{ .Values.namespace }}
  labels:
    app: email
    app.kubernetes.io/name: {{ .Values.app.kubernetes.io.name }}
    app.kubernetes.io/version: v1
    dapr.io/enabled: 'true'
    version: v1
  annotations:
    kubesphere.io/serviceType: statelessservice
    servicemesh.kubesphere.io/enabled: 'false'
spec:
  ports:
    - name: http-web
      protocol: TCP
      port: 80
      targetPort: 8081
  selector:
    app: email
  type: ClusterIP
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: email
  namespace: {{ .Values.namespace }}
  labels:
    app: email
    app.kubernetes.io/name: {{ .Values.app.kubernetes.io.name }}
    app.kubernetes.io/version: v1
  annotations:
    deployment.kubernetes.io/revision: '2'
    servicemesh.kubesphere.io/enabled: 'false'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: email
      app.kubernetes.io/name: {{ .Values.app.kubernetes.io.name }}
      app.kubernetes.io/version: v1
      version: v1
  template:
    metadata:
      labels:
        app: email
        app.kubernetes.io/name: {{ .Values.app.kubernetes.io.name }}
        app.kubernetes.io/version: v1
        version: v1
      annotations:
        dapr.io/app-id: email
        dapr.io/app-port: '8081'
        dapr.io/enabled: 'true'
        kubesphere.io/containerSecrets: '{"container":"docker-registry"}'
        logging.kubesphere.io/logsidecar-config: '{}'
        sidecar.istio.io/inject: 'false'
    spec:
      containers:
        - name: email
          image: '{{ .Values.image.repo }}/email:{{ .Values.image.tag }}'
          args:
            - '--port=:8081'
            - '--email-host={{ .Values.config.email.host }}'
            - '--email-port={{ .Values.config.email.port }}'
            - '--email-username={{ .Values.config.email.username }}'
            - '--email-password={{ .Values.config.email.password }}'
            - '--email-alias={{ .Values.config.email.alias }}'
            - '--email-sender={{ .Values.config.email.sender }}'
          ports:
            - name: http-web
              containerPort: 8081
              protocol: TCP
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      affinity: {}
{{- end }}